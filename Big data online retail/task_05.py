# -*- coding: utf-8 -*-
"""Task 05.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zE0-ojgNZNMHSk2DVye7cY0xrx2bAZJO
"""

!pip install pyspark
from pyspark.sql import SparkSession

spark = SparkSession.builder \
    .appName("RetailMLModel") \
    .getOrCreate()

from google.colab import files
uploaded = files.upload()

import pandas as pd

# Read using pandas for preview
df = pd.read_csv("Online.csv")
df.head()

spark_df = spark.createDataFrame(df)
spark_df.printSchema()
spark_df.show(5)

from pyspark.sql.functions import col

spark_df = spark_df.withColumn("TotalValue", col("Quantity") * col("UnitPrice"))

spark_df = spark_df.na.drop()

from pyspark.ml.feature import VectorAssembler

assembler = VectorAssembler(
    inputCols=["Quantity", "UnitPrice"],
    outputCol="features"
)

data = assembler.transform(spark_df).select("features", "TotalValue")
data.show(5)

train_data, test_data = data.randomSplit([0.8, 0.2], seed=42)

from pyspark.ml.regression import LinearRegression

lr = LinearRegression(featuresCol="features", labelCol="TotalValue")
model = lr.fit(train_data)

predictions = model.transform(test_data)
predictions.select("TotalValue", "prediction").show(10)

from pyspark.ml.evaluation import RegressionEvaluator

evaluator = RegressionEvaluator(
    labelCol="TotalValue", predictionCol="prediction", metricName="rmse"
)

rmse = evaluator.evaluate(predictions)
print(f"Root Mean Squared Error (RMSE): {rmse:.2f}")

assembler = VectorAssembler(inputCols=["Quantity", "UnitPrice"], outputCol="features")
lr = LinearRegression(featuresCol="features", labelCol="TotalValue")
model = lr.fit(train_data)

rmse = evaluator.evaluate(predictions)
print(f"RMSE: {rmse}")